# network architecture
# encoder related
transformer-input-layer: conv2d
elayers: 12
eunits: 3072
# decoder related
# attention related
adim: 768
aheads: 12
# transformer related
model-module: "espnet.nets.pytorch_backend.transformer_encoder:E2E"

# hybrid CTC/attention

# label smoothing
lsm-type: unigram
lsm-weight: 0.1

# minibatch related
batch-size: 40
maxlen-in: 512  # if input length  > maxlen_in, batchsize is automatically reduced
maxlen-out: 150 # if output length > maxlen_out, batchsize is automatically reduced

# optimization related
sortagrad: 0 # Feed samples from shortest to longest ; -1: enabled for all epochs, 0: disabled, other: enabled for 'other' epochs
opt: adamW
epochs: 100
dropout-rate: 0.1
accum-grad: 1
grad-clip: 1.0
patience: 0
transformer-lr: 5e-5
transformer-warmup-steps: 0
transformer-attn-dropout-rate: 0.0
transformer-length-normalized-loss: False
transformer-init: pytorch

# scheduled sampling option

